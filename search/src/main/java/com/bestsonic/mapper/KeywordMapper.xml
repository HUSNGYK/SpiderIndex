<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bestsonic.mapper.KeywordMapper">
	<resultMap id="BaseResultMap" type="com.bestsonic.domain.Keyword">
		<constructor>
			<idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
			<arg column="keyword" jdbcType="VARCHAR" javaType="java.lang.String" />
			<arg column="relationship" jdbcType="VARCHAR" javaType="java.lang.String" />
		</constructor>
	</resultMap>

	<sql id="columns">
		id, keyword, relationship
	</sql>

	<insert id="insert" parameterType="com.bestsonic.domain.Keyword">
		<selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
			SELECT
			LAST_INSERT_ID()
		</selectKey>
		INSERT INTO KEYWORD
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="keyword != null">
				keyword,
			</if>
			<if test="relationship != null">
                relationship,
            </if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="keyword != null">
				#{keyword,jdbcType=VARCHAR},
			</if>
			<if test="relationship != null">
                #{relationship,jdbcType=VARCHAR},
            </if>
		</trim>
	</insert>

	<insert id="insertByList" parameterType="java.util.List">
		INSERT INTO KEYWORD
		<trim prefix="(" suffix=")" suffixOverrides=",">
			keyword, relationship
		</trim>
		VALUES
		<foreach collection="list" index="index" item="item"
			separator=",">
			<trim prefix="(" suffix=")" suffixOverrides=",">
				#{item.keyword,jdbcType=VARCHAR},
				#{item.relationship,jdbcType=VARCHAR},
			</trim>
		</foreach>
	</insert>

	<update id="update" parameterType="com.bestsonic.domain.Keyword">
		UPDATE KEYWORD
		<set>
			<if test="headers != null">
				keyword = #{keyword,jdbcType=VARCHAR},
			</if>
			<if test="text != null">
                relationship = #{relationship,jdbcType=VARCHAR},
            </if>
		</set>
		WHERE ID = #{id,jdbcType=INTEGER}
	</update>

	<update id="updateByList" parameterType="java.util.List">
		<foreach collection="list" index="index" item="item" open="begin"
			close="end;" separator="">
			UPDATE KEYWORD
			<set>
				<if test="headers != null">
				keyword = #{keyword,jdbcType=VARCHAR},
			</if>
			<if test="text != null">
                relationship = #{relationship,jdbcType=VARCHAR},
            </if>
			</set>
			WHERE ID = #{id,jdbcType=INTEGER};
		</foreach>
	</update>

	<delete id="delete" parameterType="com.bestsonic.domain.Keyword">
		DELETE FROM KEYWORD WHERE ID = #{id,jdbcType=INTEGER}
	</delete>

	<delete id="deleteById" parameterType="int">
		DELETE FROM KEYWORD WHERE ID = #{id,jdbcType=INTEGER}
	</delete>

	<delete id="deleteByList" parameterType="java.util.List">
		DELETE FROM KEYWORD WHERE ID IN
		<foreach collection="list" index="index" item="item" open="("
			close=")" separator=",">
			#{item.id,jdbcType=INTEGER}
		</foreach>
	</delete>

	<delete id="deleteByIds" parameterType="java.util.List">
		DELETE FROM KEYWORD WHERE ID IN
		<foreach collection="list" index="index" item="item" open="("
			close=")" separator=",">
			#{item,jdbcType=INTEGER}
		</foreach>
	</delete>

	<select id="select" parameterType="int" resultMap="BaseResultMap">
		SELECT
		<include refid="columns" />
		FROM KEYWORD WHERE ID = #{id,jdbcType=INTEGER}
	</select>

	<select id="selectByIds" parameterType="java.util.List"
		resultMap="BaseResultMap">
		SELECT
		<include refid="columns" />
		FROM KEYWORD WHERE ID IN
		<foreach collection="list" index="index" item="item" open="("
			close=")" separator=",">
			#{item}
		</foreach>
		ORDER BY ID DESC
	</select>

	<select id="selectAll" resultMap="BaseResultMap">
		SELECT
		<include refid="columns" />
		FROM KEYWORD ORDER BY ID DESC
	</select>
	
	<select id="selectPage" resultMap="BaseResultMap">
		SELECT
		<include refid="columns" />
		FROM KEYWORD ORDER BY ID DESC LIMIT ${start},${length}
	</select>

</mapper>
